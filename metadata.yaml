---
plugins:
  datasette-dashboards:
    zeebe:
      title: Zeebe Dashboard
      layout:
      - [process-count, task-count, incident-count]
      - [process-count-by, process-count-by, process-count-by]
      filters: {}
      charts:
        process-count:
          title: Running Process Instances
          db: dbfile
          query: >
            SELECT count(*)
            FROM process_instance
            WHERE completed IS NULL
          library: metric
          display:
            field: count(*)
            prefix:
            suffix:
        task-count:
          title: Open Human Tasks
          db: dbfile
          query: >
            SELECT count(*)
            FROM job
            WHERE type == 'io.camunda.zeebe:userTask'
            AND completed IS NULL
          library: metric
          display:
            field: count(*)
            prefix:
            suffix:
        incident-count:
          title: Open Incidents
          db: dbfile
          query: >
            SELECT count(*)
            FROM incident
            WHERE completed IS NULL
          library: metric
          display:
            field: count(*)
            prefix:
            suffix:
        process-count-by:
          title: Running Process Instances
          db: dbfile
          query: >
            SELECT p.bpmnProcessName AS Process, COUNT(*) AS Instances
            FROM process_instance pi
            JOIN process p ON pi.processDefinition = p.key
            WHERE completed IS NULL
            GROUP BY p.bpmnProcessName
          library: vega-lite
          display: 
            mark: bar
            encoding:
              y:
                field: Process
                type: nominal
              x:
                field: Instances
                type: quantitative
databases:
  dbfile:
    tables:
      form:
        plugins:
          datasette-graphql:
            json_columns:
            - schema
      variable:
        plugins:
          datasette-graphql:
            json_columns:
            - value
      job:
        plugins:
          datasette-graphql:
            json_columns:
            - customHeaders
            - variables
      decision_evaluation:
        plugins:
          datasette-graphql:
            json_columns:
            - decisionOutput
            - evaluatedDecisions
